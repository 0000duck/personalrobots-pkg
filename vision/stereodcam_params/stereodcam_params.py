#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Fri Mar 20 00:10:54 2009

import wx
import sys
import os

PKG = 'stereodcam_params' # this package name
import roslib; roslib.load_manifest(PKG)
from roslib.scriptutil import get_param_server, script_resolve_name
from roslib.names import ns_join, get_ros_namespace, make_caller_id, make_global_ns, GLOBALNS

import rospy
from std_msgs.msg import Empty

# begin wxGlade: extracode
# end wxGlade

def _get_caller_id():
    return make_caller_id('rosparam-%s'%os.getpid())


def succeed(args):
    code, msg, val = args
    if code != 1:
        raise RosParamException(msg)
    return val

def _get_param(param):
    return succeed(get_param_server().getParam(_get_caller_id(), param))

def _set_param(param, value):
    succeed(get_param_server().setParam(_get_caller_id(), param, value))


def exposure_callback(new_exposure):
   print "I Got new exposure", new_exposure




class StereoParameters(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: StereoParameters.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.exposure_label = wx.StaticText(self, -1, "Exposure")
        self.exposure_slider = wx.Slider(self, -1, 0, 0, 10)
        self.exposure_spin = wx.SpinCtrl(self, -1, "", min=0, max=100)
        self.gain_label = wx.StaticText(self, -1, "Gain")
        self.gain_slider = wx.Slider(self, -1, 0, 0, 10)
        self.gain_spin = wx.SpinCtrl(self, -1, "", min=0, max=100)
        self.brightness_label = wx.StaticText(self, -1, "Brightness")
        self.brightness_slider = wx.Slider(self, -1, 0, 0, 10)
        self.brightness_spin = wx.SpinCtrl(self, -1, "", min=0, max=100)
        self.close_button = wx.Button(self, -1, "Close")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMMAND_SCROLL, self.onExposureSlider, self.exposure_slider)
        self.Bind(wx.EVT_SPINCTRL, self.onExposureSpin, self.exposure_spin)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.onGainSlider, self.gain_slider)
        self.Bind(wx.EVT_SPINCTRL, self.onGainSpin, self.gain_spin)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.onBrightnessSlider, self.brightness_slider)
        self.Bind(wx.EVT_SPINCTRL, self.onBrightnessSpin, self.brightness_spin)
        self.Bind(wx.EVT_BUTTON, self.onClose, self.close_button)
        # end wxGlade
        
        try:
            gain_min = _get_param("stereo/gain_min")
            gain_max = _get_param("stereo/gain_max")
            self.gain_slider.SetRange(gain_min, gain_max)
            self.gain_spin.SetRange(gain_min, gain_max)

            gain = _get_param("stereo/gain")
            self.gain_slider.SetValue(gain)
            self.gain_spin.SetValue(gain)
        except:
            pass
            
        try:
            exposure_min = _get_param("stereo/exposure_min")
            exposure_max = _get_param("stereo/exposure_max")
            self.exposure_slider.SetRange(exposure_min, exposure_max)
            self.exposure_spin.SetRange(exposure_min, exposure_max)

            exposure = _get_param("stereo/exposure")
            self.exposure_slider.SetValue(exposure)
            self.exposure_spin.SetValue(exposure)
        except:
            pass

            
        try:
            brightness_min = _get_param("stereo/brightness_min")
            brightness_max = _get_param("stereo/brightness_max")
            self.brightness_slider.SetRange(brightness_min, brightness_max)
            self.brightness_spin.SetRange(brightness_min, brightness_max)

            brightness = _get_param("stereo/brightness")
            self.brightness_slider.SetValue(brightness)
            self.brightness_spin.SetValue(brightness)
        except:
            pass
        
        self.pub = rospy.Publisher('stereo/check_params', Empty)
        rospy.init_node('stereodcam_params', anonymous=True)
#        self.exposure_spin.SetRange()
        
         
        

    def __set_properties(self):
        # begin wxGlade: StereoParameters.__set_properties
        self.SetTitle("Stereo Parameters")
        self.SetSize((498, 226))
        self.exposure_label.SetMinSize((100, -1))
        self.gain_label.SetMinSize((100, -1))
        self.brightness_label.SetMinSize((100, -1))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: StereoParameters.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add((20, 20), 0, 0, 0)
        sizer_2_copy_copy.Add(self.exposure_label, 0, 0, 0)
        sizer_2_copy_copy.Add(self.exposure_slider, 1, 0, 0)
        sizer_2_copy_copy.Add(self.exposure_spin, 0, 0, 0)
        sizer_1.Add(sizer_2_copy_copy, 1, wx.EXPAND, 0)
        sizer_2_copy.Add(self.gain_label, 0, 0, 0)
        sizer_2_copy.Add(self.gain_slider, 1, 0, 0)
        sizer_2_copy.Add(self.gain_spin, 0, 0, 0)
        sizer_1.Add(sizer_2_copy, 1, wx.EXPAND, 0)
        sizer_2_copy_1.Add(self.brightness_label, 0, 0, 0)
        sizer_2_copy_1.Add(self.brightness_slider, 1, 0, 0)
        sizer_2_copy_1.Add(self.brightness_spin, 0, 0, 0)
        sizer_1.Add(sizer_2_copy_1, 1, wx.EXPAND, 0)
        sizer_1.Add(self.close_button, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add((20, 20), 0, 0, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade



    def _set_param(self, param, value):
        
        _set_param(param, value)
        self.pub.publish(Empty())
        

    def onClose(self, event): # wxGlade: StereoParameters.<event_handler>
        sys.exit(0)

    def onExposureSlider(self, event): # wxGlade: StereoParameters.<event_handler>
        value = event.GetPosition()
        self.exposure_spin.SetValue(value)
        self._set_param("stereo/exposure", value)
#        event.Skip()

    def onExposureSpin(self, event): # wxGlade: StereoParameters.<event_handler>
        value = event.GetInt()
        self.exposure_slider.SetValue(value)
        self._set_param("stereo/exposure", value)
#        event.Skip()

    def onGainSlider(self, event): # wxGlade: StereoParameters.<event_handler>
        value = event.GetPosition()
        self.gain_spin.SetValue(value)
        self._set_param("stereo/gain", value)
#        event.Skip()

    def onGainSpin(self, event): # wxGlade: StereoParameters.<event_handler>
        value = event.GetInt()
        self.gain_slider.SetValue(value)
        self._set_param("stereo/gain", value)
#        event.Skip()

    def onBrightnessSlider(self, event): # wxGlade: StereoParameters.<event_handler>
        value = event.GetPosition()
        self.brightness_spin.SetValue(value)
        self._set_param("stereo/brightness", value)
#        event.Skip()

    def onBrightnessSpin(self, event): # wxGlade: StereoParameters.<event_handler>
        value = event.GetInt()
        self.brightness_slider.SetValue(value)
        self._set_param("stereo/brightness", value)
#        event.Skip()

# end of class StereoParameters


class MyApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        frame_2 = StereoParameters(None, -1, "")
        self.SetTopWindow(frame_2)
        frame_2.Show()
        return 1

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
