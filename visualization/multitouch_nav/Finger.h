/* auto-generated by genmsg_cpp from Finger.msg.  Do not edit! */
#ifndef VISUALIZATION_FINGER_H
#define VISUALIZATION_FINGER_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/time.h"

namespace visualization
{

//! \htmlinclude Finger.msg.html

class Finger : public ros::Message
{
public:
  int8_t id;
  int32_t x;
  int32_t y;
  const static int8_t FINGER_DOWN = 1;
  const static int8_t FINGER_DRAG = 2;
  const static int8_t FINGER_UP = 3;
  int8_t eventType;

  Finger() : ros::Message(),
    id(0),
    x(0),
    y(0),
    eventType(0)
  {
  }
  Finger(const Finger &copy) : ros::Message(),
    id(copy.id),
    x(copy.x),
    y(copy.y),
    eventType(copy.eventType)
  {
    (void)copy;
  }
  Finger &operator =(const Finger &copy)
  {
    if (this == &copy)
      return *this;
    id = copy.id;
    x = copy.x;
    y = copy.y;
    eventType = copy.eventType;
    return *this;
  }
  virtual ~Finger() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("visualization/Finger"); }
  inline static std::string __s_getMD5Sum() { return std::string("dfc4b92a1fd0d7b2b47db02338ba9686"); }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 1; // id
    __l += 4; // x
    __l += 4; // y
    __l += 0; // FINGER_DOWN
    __l += 0; // FINGER_DRAG
    __l += 0; // FINGER_UP
    __l += 1; // eventType
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, id);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, x);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, y);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, eventType);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, id);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, x);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, y);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, eventType);
    return read_ptr;
  }
};


}

#endif
