/* auto-generated by genmsg_cpp from /u/ethand/ros/ros-pkg/sandbox/follower/msg/WaitActionGoal.msg.  Do not edit! */
#ifndef FOLLOWER_WAITACTIONGOAL_H
#define FOLLOWER_WAITACTIONGOAL_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/time.h"

namespace follower
{

//! \htmlinclude WaitActionGoal.msg.html

class WaitActionGoal : public ros::Message
{
public:
  typedef boost::shared_ptr<WaitActionGoal> Ptr;
  typedef boost::shared_ptr<WaitActionGoal const> ConstPtr;

  int32_t num_events;
  std::string topic_name;

  WaitActionGoal() : ros::Message(),
    num_events(0)
  {
  }
  WaitActionGoal(const WaitActionGoal &copy) : ros::Message(),
    num_events(copy.num_events),
    topic_name(copy.topic_name)
  {
    (void)copy;
  }
  WaitActionGoal &operator =(const WaitActionGoal &copy)
  {
    if (this == &copy)
      return *this;
    num_events = copy.num_events;
    topic_name = copy.topic_name;
    return *this;
  }
  virtual ~WaitActionGoal() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("follower/WaitActionGoal"); }
  inline static std::string __s_getMD5Sum() { return std::string("54f5dc6d242ed96aa3e20c82006143e4"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "int32 num_events\n"
    "string topic_name\n"
    "\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 4; // num_events
    __l += 4 + topic_name.length(); // topic_name
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, num_events);
    unsigned __ros_topic_name_len = topic_name.length();
    SROS_SERIALIZE_PRIMITIVE(write_ptr, __ros_topic_name_len);
    SROS_SERIALIZE_BUFFER(write_ptr, topic_name.c_str(), __ros_topic_name_len);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, num_events);
    unsigned __ros_topic_name_len;
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, __ros_topic_name_len);
    topic_name = std::string((const char *)read_ptr, __ros_topic_name_len);
    read_ptr += __ros_topic_name_len;
    return read_ptr;
  }
};

typedef boost::shared_ptr<WaitActionGoal> WaitActionGoalPtr;
typedef boost::shared_ptr<WaitActionGoal const> WaitActionGoalConstPtr;


}

#endif
