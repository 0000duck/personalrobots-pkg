#include "run/doors/sim.nddl";

/**
 * For now, assume a fixed duration, and always return success.
 */
DoorManipulationBehavior::Active{
  meets(Inactive s);
  eq(s.status, SUCCESS);
  eq(duration, 1);
}

CheckPath::Active{
  meets(Inactive s);
  eq(s.status, SUCCESS);
  eq(duration, 1);
}

MoveBase::Active{
  meets(Inactive s);
  eq(s.status, SUCCESS);
  eq(duration, 1);
}

StopAction::Active{
  eq(duration, 5);
  meets(Inactive s);
  eq(s.status, SUCCESS);
}

CheckPath::Inactive{
  if(status == SUCCESS){
    eq(is_clear, false);
  }
}

DetectDoor::Inactive{
  if(status == SUCCESS){
    eq(latch_state, LATCH_STATE_LATCHED);
  }
}

DetectHandle::Inactive{
  if(status == SUCCESS){
    eq(latch_state, LATCH_STATE_LATCHED);
  }
}

UnlatchHandle::Inactive{
  if(status == SUCCESS){
    eq(latch_state, LATCH_STATE_UNLATCHED);
  }
}

// Start with a default position
fact(base_state.Holds f1);
f1.x = 0.0;
f1.y = 0.0;
f1.z = 0.0;
f1.qx = 0.0;
f1.qy = 0.0;
f1.qz = 1.0;
f1.qw = 0.0;