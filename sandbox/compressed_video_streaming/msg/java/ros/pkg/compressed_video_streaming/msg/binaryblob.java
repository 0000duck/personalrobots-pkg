/* auto-generated by genmsg_cpp from /u/ethand/rosPostCommonMsgs/ros-pkg/sandbox/compressed_video_streaming/msg/binaryblob.msg.  Do not edit! */
package ros.pkg.compressed_video_streaming.msg;


import java.nio.ByteBuffer;

public  class binaryblob extends ros.communication.Message
{

  public byte[] blob;

  public binaryblob() {
 super();
  blob = new byte[0];

  }
  public static java.lang.String __s_getDataType() { return "compressed_video_streaming/binaryblob"; }
  public static java.lang.String __s_getMD5Sum() { return "686a5a6faa4b2c7d2070ef2a260d09e7"; }
  public static java.lang.String __s_getMessageDefinition()
  {
    return 
    "uint8[] blob\n" + 
    "\n" + 
    "";
  }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public java.lang.String getMD5Sum()   { return __s_getMD5Sum(); }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }
  public binaryblob clone() {
    binaryblob clone = (binaryblob)super.clone();
      blob =  (byte[])(clone.blob.clone());
    return clone;
  }

  public static java.util.Map<java.lang.String, java.lang.String> fieldTypes() {
         java.util.HashMap<java.lang.String, java.lang.String> m = new java.util.HashMap<java.lang.String, java.lang.String>  ();      m.put("blob", "byte[]");
     return m;
  }

  public static java.util.Set<java.lang.String> submessageTypes() {
         java.util.HashSet<java.lang.String> s = new java.util.HashSet<java.lang.String>  ();      return s;
  }

  public void setTo(ros.communication.Message __m) {
    if (!(__m instanceof binaryblob)) throw new RuntimeException("Invalid Type");
    binaryblob __m2 = (binaryblob) __m;
    blob = __m2.blob;
    }

  public int serializationLength() 
  {
    int __l = 0;
    __l += 4 + (blob.length == 0 ? 0 : blob.length * (1)); // blob
    return __l;
  }
  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt(blob.length);
    bb.put(blob);
  }
  public void deserialize(ByteBuffer bb)  {
     int blob_len = bb.getInt();
    blob = new byte[blob_len];
    bb.get(blob);
  }
}

