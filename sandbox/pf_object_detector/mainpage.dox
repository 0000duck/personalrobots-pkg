/**
\mainpage
\htmlinclude manifest.html

\b pf_object_detector is a wrapper for http://people.cs.uchicago.edu/~pff/latent/.

<!--
... In addition to providing an overview of your package,
this is the section where the specification and design/architecture 
should be detailed. While the original specification may be done on the
wiki, it should be transferred here once your package starts to take shape.
You can then link to this documentation page from the Wiki.


\section codeapi Code API

Provide links to specific auto-generated API documentation within your
package that is of particular interest to a reader. Doxygen will
document pretty much every part of your code, so do your best here to
point the reader to the actual API.

If your codebase is fairly large or has different sets of APIs, you
should use the doxygen 'group' tag to keep these APIs together. For
example, the roscpp documentation has 'libros' group
so that it can be viewed separately. The rospy documentation
similarly has a 'client-api' group that pulls together APIs for a
Client API page.

-->

\section rosapi ROS API

List of nodes:
- \b pf_detector_node



<hr>

\subsection pf_detector_node pf_detector_node

node_name does (provide a basic description of your node)

\subsubsection Usage
\verbatim
$ pf_detector_node [standard ROS args]
\endverbatim

\par Example

\verbatim
$ pf_detector_node
\endverbatim


\subsubsection topics ROS topics

Subscribes to:
- \b "image": [image_msgs/Image] The image to run a detector on. Right now we assume a grayscale.

Publishes to:
- \b "objects_plain": [people/PositionMeasurement.msg], Uses only x/y part of the message. The data is in image coordinates. Covariance is set to a quarter of the box width.

\subsubsection parameters ROS parameters

Reads the following parameters from the parameter server

- \b "~tag" : \b [string] Outgoing object tag
- \b "~model_file" : \b [string] path to model file
- \b "~scale" : \b [double] Resize the image to this scale before processing (1- no resizing, 0.5 - half size, quarter pixels)
- \b "~interval" : \b [int] How many intervals per octave (per scaling factor of 2). The smaller the number, the faster. Natural interval is 10.
- \b "~do_display" : \b [int] Show an image after processing.




<!--

<!-- START: copy for each node -- >


<hr>

\subsection node_name node_name

node_name does (provide a basic description of your node)

\subsubsection Usage
\verbatim
$ node_type1 [standard ROS args]
\endverbatim

\par Example

\verbatim
$ node_type1
\endverbatim


\subsubsection topics ROS topics

Subscribes to:
- \b "in": [std_msgs/FooType] description of in

Publishes to:
- \b "out": [std_msgs/FooType] description of out

\subsubsection parameters ROS parameters

Reads the following parameters from the parameter server

- \b "~param_name" : \b [type] description of param_name
- \b "~my_param" : \b [string] description of my_param

Sets the following parameters on the parameter server

- \b "~param_name" : \b [type] description of param_name


\subsubsection services ROS services
- \b "foo_service": [std_srvs/FooType] description of foo_service


<!-- END: copy for each node -- >

\section commandline Command-line tools

This section is a catch-all for any additional tools that your package
provides or uses that may be of use to the reader. For example:

- tools/scripts (e.g. rospack, roscd)
- roslaunch .launch files
- xmlparam files

\subsection script_name script_name

Description of what this script/file does.

\subsubsection Usage
\verbatim
$ ./script_name [args]
\endverbatim

\par Example

\verbatim
$ ./script_name foo bar
\endverbatim
-->
*/