import os, os.path
import copy, glob, sys
import sipconfig
#import PyQt4.pyqtconfig

src_path = '@PROJ_SOURCE_DIR@/src'
build_path = '@PROJ_BINARY_DIR@/src'
python_path = src_path + '/bindings/python'

# create paths for temporary files if don't exist
if not os.path.isdir("./sip"):
    os.mkdir("./sip")

##########################################################################
# SIP -> *.CPP + *.H

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = python_path + "/kdl.sbf"

# Get the SIP configuration information.
config = sipconfig.Configuration()

# directory where modules will be installed
mod_dir = os.path.join(config.default_mod_dir, "kdl")

# directory where sip files will be installed
sip_dir = os.path.join(config.default_sip_dir, "kdl")

# Run SIP to generate the code.
print "Parsing SIP files for 'PyKDL' library..."
os.system(" ".join([config.sip_bin, "-c", ".", "-b", build_file, python_path + "/PyKDL.sip"]))

##########################################################################
# MAKEFILES

print "Creating makefiles..."

# We are going to install the SIP specification file for this module and
# its configuration module.
installs = []

installs = copy.copy(installs)

# install all sip files
sips_kdl = glob.glob(python_path + "*.sip")
for sip in sips_kdl:
    installs.append([os.path.basename(sip), sip_dir])
    
# Create the Makefile.  The QtModuleMakefile class provided by the
# pyqtconfig module takes care of all the extra preprocessor, compiler and
# linker flags needed by the Qt library.
makefile = sipconfig.ModuleMakefile(
    configuration=config,
    build_file=build_file,
    installs=installs,
    install_dir=mod_dir,
    dir="")

# common settings for both core and gui libs
makefile.extra_libs = ["orocos-kdl"]
makefile.extra_lib_dirs = [build_path]
makefile.extra_include_dirs = [src_path,build_path]
    
# Generate the Makefile itself.
makefile.generate()

print "Done"
