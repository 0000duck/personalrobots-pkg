#!/usr/bin/env python
# Software License Agreement (BSD License)
#
# Copyright (c) 2008, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of the Willow Garage nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

## Gazebo test cameras validation 

PKG = 'test_pr2_sensors_gazebo'
NAME = 'test_scan'

import math
import roslib
roslib.load_manifest(PKG)
roslib.load_manifest('rostest')


import sys, unittest
import os, os.path, threading, time
import rospy, rostest
from laser_scan.msg import *

TEST_DURATION  = 15
ERROR_TOL      = 0.05
FAIL_COUNT_TOL = 10

TARGET_RANGES = [
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 2.05170464516, 2.04536008835, 2.03909778595, 2.03291654587, 2.02681565285, 
2.02079415321, 2.01485085487, 2.00898480415, 2.0031952858, 1.99748134613, 1.99184203148, 1.98627638817, 
1.98078382015, 1.97536325455, 1.9700139761, 1.96473526955, 1.95952606201, 1.95438587666, 1.94931387901, 
1.94430923462, 1.93937122822, 1.93449926376, 1.92969250679, 1.92495036125, 1.92027211189, 1.91565704346, 
1.91110467911, 1.90661418438, 1.90218496323, 1.91215276718, 1.93008923531, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 2.64686512947, 2.6173157692, 2.59563803673, 2.57963132858, 2.5657658577, 
2.55445694923, 2.54415798187, 2.53618431091, 2.52831435204, 2.5224199295, 2.51713490486, 2.51194572449, 
2.50885725021, 2.50583004951, 2.50296163559, 2.50192046165, 2.50093340874, 2.5, 2.50093340874, 
2.50192022324, 2.50296139717, 2.50582957268, 2.50885748863, 2.51194500923, 2.51713514328, 2.52241945267, 
2.52831435204, 2.53618454933, 2.54415798187, 2.55445718765, 2.5657658577, 2.57963109016, 2.59563827515, 
2.6173157692, 2.64686512947, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 2.74098372459, 2.72118186951, 2.72313261032, 2.72514390945, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 1.85238564014, 1.80339097977, 1.77707922459, 1.75727534294, 1.74103367329, 
1.72714829445, 1.71498286724, 1.70415234566, 1.69440209866, 1.68555378914, 1.67747652531, 1.67007064819, 
1.66325867176, 1.6569788456, 1.65118086338, 1.64582335949, 1.64087188244, 1.63629746437, 1.63207530975, 
1.62818443775, 1.62460672855, 1.62132656574, 1.61833024025, 1.61560595036, 1.61314368248, 1.61093437672, 
1.60897052288, 1.60724556446, 1.6057536602, 1.60449028015, 1.60345125198, 1.60263371468, 1.60203504562, 
1.60165333748, 1.60148763657, 1.60153746605, 1.60180282593, 1.60228455067, 1.60298418999, 1.60390377045, 
1.60504591465, 1.60641443729, 1.60801339149, 1.60984802246, 1.61192440987, 1.61424958706, 1.61683177948, 
1.61968040466, 1.62280631065, 1.62622225285, 1.62994265556, 1.6339840889, 1.63836622238, 1.64311158657, 
1.64824676514, 1.65380322933, 1.65981829166, 1.66633713245, 1.6734149456, 1.68112039566, 1.68954002857, 
1.69878637791, 1.709010005, 1.72041964531, 1.73332083225, 1.74819290638, 1.76587283611, 1.7881039381, 
1.82019233704, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, 
10.0500001907, 10.0500001907, 10.0500001907, 10.0500001907, ]

TARGET_RANGES_NO_CUP = [
9.99476337433, 9.99915409088, 9.9980840683, 9.99544811249, 9.99247932434, 9.99987125397, 10.0, 
10.0, 10.0, 9.99570083618, 9.99697780609, 9.99871063232, 10.0, 9.9951505661, 
9.99574947357, 9.99571800232, 10.0, 9.99369239807, 9.98751068115, 10.0, 10.0, 
10.0, 10.0, 10.0, 10.0, 9.99402236938, 9.99502182007, 9.99989032745, 
9.99433040619, 10.0, 10.0, 10.0, 10.0, 9.99642848969, 9.99311733246, 
9.99080371857, 9.99869918823, 9.99518108368, 9.9992313385, 9.99637699127, 9.99965381622, 10.0, 
10.0, 10.0, 9.98989868164, 10.0, 10.0, 10.0, 9.99868202209, 
9.99988460541, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 
10.0, 9.99419593811, 9.99769973755, 10.0, 9.99773597717, 9.99521923065, 9.9989528656, 
10.0, 10.0, 9.99299144745, 10.0, 10.0, 10.0, 10.0, 
9.99306488037, 9.99461555481, 10.0, 10.0, 10.0, 10.0, 9.9988899231, 
10.0, 9.99577617645, 10.0, 9.99996948242, 10.0, 9.99888038635, 10.0, 
9.99547863007, 10.0, 9.99754333496, 9.99646663666, 9.99636745453, 10.0, 9.99492073059, 
10.0, 9.99544906616, 9.99992465973, 10.0, 9.99313831329, 9.9924287796, 9.99806690216, 
10.0, 9.99959754944, 9.9965429306, 10.0, 9.99796295166, 9.99425697327, 10.0, 
10.0, 9.993309021, 9.99934768677, 9.99693965912, 9.99562644958, 9.99121761322, 10.0, 
10.0, 10.0, 9.99929714203, 9.98904514313, 10.0, 9.99738502502, 9.99516010284, 
10.0, 9.99420166016, 9.99589443207, 9.99719142914, 10.0, 9.99889755249, 9.99705886841, 
9.99546432495, 9.99746227264, 10.0, 10.0, 10.0, 9.99825286865, 9.99210739136, 
9.99803924561, 10.0, 9.99971008301, 9.99635696411, 10.0, 9.99846744537, 10.0, 
10.0, 9.99960613251, 10.0, 10.0, 10.0, 10.0, 10.0, 
9.9983921051, 9.99517917633, 10.0, 10.0, 10.0, 9.99143028259, 9.99753952026, 
9.99354362488, 9.99571418762, 9.99830722809, 10.0, 10.0, 10.0, 10.0, 
9.99717235565, 10.0, 10.0, 9.99768161774, 10.0, 10.0, 10.0, 
10.0, 10.0, 9.99769306183, 9.99876308441, 10.0, 9.99790000916, 10.0, 
10.0, 10.0, 9.99973678589, 10.0, 10.0, 9.9947719574, 9.99311733246, 
9.99606513977, 9.99509048462, 9.99731826782, 10.0, 9.99836826324, 10.0, 10.0, 
9.9998550415, 10.0, 10.0, 9.99485683441, 10.0, 10.0, 10.0, 
10.0, 10.0, 9.99743270874, 10.0, 10.0, 10.0, 10.0, 
10.0, 10.0, 10.0, 10.0, 9.99156475067, 9.99921417236, 10.0, 
10.0, 2.06086134911, 2.04304623604, 2.0339550972, 2.02424860001, 2.01822209358, 2.00541353226, 
2.00950431824, 2.01216411591, 1.99409127235, 1.98584282398, 1.9796885252, 1.97141456604, 1.97109520435, 
1.96310019493, 1.95760452747, 1.94794130325, 1.94456517696, 1.9429050684, 1.93092298508, 1.92481744289, 
1.91104245186, 1.92116236687, 1.90875279903, 1.91201162338, 1.91060841084, 1.9481087923, 10.0, 
9.99790000916, 10.0, 9.9997549057, 10.0, 2.20694303513, 2.13595581055, 2.09233593941, 
2.05992150307, 2.04684782028, 2.0105304718, 2.0034236908, 1.98622024059, 1.96934950352, 1.95327341557, 
1.94734430313, 1.93790948391, 1.91805744171, 1.92023038864, 1.91111695766, 1.90268266201, 1.89178168774, 
1.88587677479, 1.88105416298, 1.87175905704, 1.87152767181, 1.85961914062, 1.86312639713, 1.85783874989, 
1.85148191452, 1.85052847862, 1.85015428066, 1.83663785458, 1.8420343399, 1.83422958851, 1.83971726894, 
1.82643020153, 1.84026670456, 1.82681381702, 1.82727408409, 1.82976984978, 1.83560442924, 1.82895517349, 
1.82742130756, 1.83289515972, 1.83308851719, 1.83400034904, 1.83486151695, 1.83346903324, 1.843121171, 
1.83799111843, 1.84082233906, 1.83912694454, 1.85082960129, 1.85728240013, 1.85684919357, 1.86858487129, 
1.85801696777, 1.86892950535, 1.87535607815, 1.88767051697, 1.8894739151, 1.88158750534, 1.90748083591, 
1.91861128807, 1.91681289673, 1.92637014389, 1.9453959465, 1.94760048389, 1.96476387978, 1.97642087936, 
1.98773860931, 2.00082230568, 2.02187848091, 2.04454755783, 2.06747937202, 2.09650659561, 2.13415074348, 
2.2187731266, 9.99858570099, 9.99892234802, 10.0, 9.99847984314, 9.99835777283, 10.0, 
9.99802207947, 10.0, 10.0, 9.99804782867, 10.0, 9.99098968506, 10.0, 
9.98982906342, 9.99451065063, 10.0, 10.0, 10.0, 10.0, 9.99514484406, 
10.0, 9.99383735657, 10.0, 9.99984645844, 9.99502182007, 10.0, 10.0, 
9.99558448792, 9.99419307709, 10.0, 9.99855041504, 10.0, 9.99853992462, 10.0, 
9.99225997925, 9.99515724182, 9.9920425415, 10.0, 9.9990272522, 10.0, 10.0, 
10.0, 10.0, 10.0, 9.99676132202, 10.0, 10.0, 9.99200820923, 
10.0, 10.0, 10.0, 10.0, 9.99334526062, 9.9963054657, 1.81890285015, 
1.78722798824, 1.7564176321, 1.73074293137, 1.72104763985, 1.71541452408, 1.69194555283, 1.68025803566, 
1.68196249008, 1.67249023914, 1.65943968296, 1.66511642933, 1.6518150568, 1.64434278011, 1.63414955139, 
1.63466000557, 1.6311827898, 1.62357568741, 1.62163007259, 1.61668038368, 1.6198694706, 1.61859762669, 
1.61467289925, 1.61767232418, 1.60972583294, 1.59921658039, 1.60989630222, 1.60952198505, 1.60353279114, 
1.60106611252, 1.60755217075, 1.60279548168, 1.6037607193, 1.59758174419, 1.61504018307, 1.60315585136, 
1.61430108547, 1.61935985088, 1.6197283268, 1.6197873354, 1.63474357128, 1.62740767002, 1.63514101505, 
1.64930307865, 1.65339374542, 1.64165866375, 1.66210532188, 1.66579389572, 1.67740690708, 1.69021046162, 
1.6914730072, 1.71135175228, 1.71780586243, 1.73485779762, 1.74796378613, 1.77337503433, 1.79069185257, 
1.85190665722, 9.99466514587, 9.99758243561, 10.0, 10.0, 9.99541854858, 9.99849796295, 
10.0, 9.99859523773, 10.0, 10.0, 10.0, 10.0, 9.99609375, 
9.99290943146, 10.0, 10.0, 9.99337387085, 10.0, 9.99309444427, 10.0, 
10.0, 9.99879550934, 10.0, 9.99773311615, 9.99247074127, 9.99773311615, 10.0, 
10.0, 9.99690723419, 9.9930562973, 10.0, 9.9975605011, 9.99978923798, 9.99831199646, 
10.0, 10.0, 9.99663925171, 10.0, 9.9908323288, 10.0, 10.0, 
9.99440383911, 9.99343204498, 9.99680995941, 10.0, 9.9914522171, 10.0, 9.99971008301, 
9.99607467651, 10.0, 10.0, 10.0, 10.0, 9.99754428864, 9.99942398071, 
9.99652862549, 10.0, 9.99985599518, 10.0, 9.99620819092, 10.0, 10.0, 
10.0, 9.99734973907, 9.99345207214, 9.99027442932, 10.0, 10.0, 9.99174880981, 
10.0, 10.0, 10.0, 10.0, 10.0, 9.99772644043, 9.99623966217, 
9.99545478821, 9.99369525909, 9.99638557434, 10.0, 10.0, 10.0, 9.99510478973, 
10.0, 9.99890422821, 10.0, 9.99664783478, 9.99530029297, 9.99272155762, 9.99526691437, 
9.99059009552, 9.99496936798, 9.99064540863, 10.0, 10.0, 10.0, 10.0, 
10.0, 10.0, 9.99388217926, 9.99864006042, 9.99601364136, 10.0, 10.0, 
10.0, 9.99941635132, 9.99548149109, 9.99714565277, 10.0, 10.0, 10.0, 
9.99674892426, 10.0, 10.0, 10.0, 10.0, 10.0, 9.99993991852, 
9.99406242371, 9.99754905701, 10.0, 9.99809741974, 10.0, 10.0, 10.0, 
9.99078083038, 10.0, 10.0, 9.9890537262, 10.0, 10.0, 9.99831676483, 
9.99514293671, 9.99895572662, 10.0, 9.99979972839, 10.0, 10.0, 9.99960517883, 
10.0, 9.9977645874, 9.99483966827, 9.99435138702, 9.99808311462, 10.0, 10.0, 
10.0, 9.99860095978, 9.99510669708, 9.99941539764, 9.99424552917, 10.0, 10.0, 
10.0, 10.0, 10.0, 9.99568939209, 10.0, 9.99476718903, 10.0, 
9.99623680115, 10.0, 10.0, 9.99558544159, 10.0, 10.0, 10.0, 
9.99999809265, 9.99686145782, 9.99739742279, 10.0, 9.99958515167, 10.0, 10.0, 
10.0, 10.0, 9.9971036911, 10.0, 10.0, 9.99803543091, 9.99508190155, 
9.99119567871, 9.9919462204, 9.99840164185, 10.0, 9.99807834625, 9.99764728546, 9.99995422363, 
9.99419116974, 10.0, 10.0, 9.99629592896, 9.99354934692, 9.99356937408, 10.0, 
10.0, 9.99736213684, 10.0, 10.0, 9.99850463867, 10.0, 10.0, 
10.0, 9.99309253693, 10.0, 9.99250221252, 10.0, 10.0, 9.99476718903, 
9.99114704132, 10.0, 10.0, ]





class PointCloudTest(unittest.TestCase):
    def __init__(self, *args):
        super(PointCloudTest, self).__init__(*args)
        self.success = False


    def printPointCloud(self, cloud):
        print "["
        i = 0
        for pt in cloud.ranges:
            sys.stdout.write(str(pt) + ", ")
            i = i + 1
            if ((i % 7) == 0):
                print "" #newline
        print "]"


    def pointInput(self, cloud):
        i = 0
        fail_count = 0
        print "Input laser scan received"
        self.printPointCloud(cloud)  #uncomment to capture new data
        while (i < len(cloud.ranges) and i < len(TARGET_RANGES_NO_CUP)):
            d = cloud.ranges[i] - TARGET_RANGES_NO_CUP[i]
            if ((d < - ERROR_TOL) or (d > ERROR_TOL)):
                fail_count += 1
                print "fail_count:" + str(fail_count) + " failed. error:" + str(d) + " exceeded tolerance:" + str(ERROR_TOL)
            i = i + 1

        if fail_count > FAIL_COUNT_TOL:
            print "Fail count too large (" + str(fail_count) + "), failing scan"
            return

        self.success = True
    
    def test_scan(self):
        print "LNK\n"
        rospy.Subscriber("/base_scan", LaserScan, self.pointInput)
        rospy.init_node(NAME, anonymous=True)
        timeout_t = time.time() + TEST_DURATION
        while not rospy.is_shutdown() and not self.success and time.time() < timeout_t:
            time.sleep(0.1)
        self.assert_(self.success)
        
    


if __name__ == '__main__':
    rostest.run(PKG, sys.argv[0], PointCloudTest, sys.argv) #, text_mode=True)


