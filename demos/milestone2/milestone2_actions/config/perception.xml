<launch>

  <include file="$(find 3dnav_pr2)/launch/pr2_planning_environment.launch" />

  <include file="$(find pr2_alpha)/$(env ROBOT).machine" />

  <node pkg="mux" type="throttle" args="3.0 base_scan base_scan_throttled" />
  <node pkg="mux" type="throttle" args="3.0 tilt_scan tilt_scan_throttled" />


  <!-- Stereo image processing -->
  <group ns="narrow_stereo">
    <node pkg="stereo_image_proc" type="stereoproc" respawn="false" machine="three" name="stereoproc">
      <param name="do_colorize"    type="bool" value="True"/>
      <param name="do_rectify"     type="bool" value="True"/>
      <param name="do_stereo"      type="bool" value="True"/>
      <param name="do_calc_points" type="bool" value="True"/>
      <param name="do_keep_coords" type="bool" value="True"/>
      <param name="num_disp" type="int" value="128"/>
    </node>
  </group>

  <!-- Downsampled version for remove viewing -->
  <node pkg="mux" type="throttle" args="1.0 stereo/cloud stereo/cloud_throttled" machine="four"/>
  

  <!-- Filter for tilt laser shadowing/veiling -->
  <node pkg="laser_scan" type="scan_to_cloud" respawn="true" machine="three" name="tilt_shadow_filter">
    <rosparam command="load" ns="scan_filters" file="$(find laser_scan)/default_scan_shadows.yaml" />
    <rosparam command="load" ns="cloud_filters" file="$(find laser_scan)/point_cloud_footprint.filters.yaml" />
    <param name="scan_topic" value="tilt_scan" />
    <param name="cloud_topic" value="tilt_scan_shadow_filtered" />
    <param name="high_fidelity" value="true" />
  </node>

  <!-- Filter for tilt laser scans that hit the body of the robot -->
  <node pkg="robot_self_filter" type="self_filter" name="tilt_laser_self_filter" respawn="true" output="screen">

    <!-- The topic for the input cloud -->
    <remap from="cloud_in" to="tilt_scan_shadow_filtered" />

    <!-- The topic for the output cloud -->
    <remap from="cloud_out" to="tilt_scan_filtered" />

    <!-- The frame of the sensor used to obtain the data to be
      filtered; This parameter is optional. If it is not specified,
      shadow points will be considered outside -->
    <param name="sensor_frame" type="string" value="laser_tilt_link" />

    <!-- Minimum distance to sensor (for point not to be considered inside) -->
    <param name="min_sensor_dist" type="double" value="0.01" />

    <!-- The padding to be added for the body parts the robot can see -->
    <param name="self_see_padd" type="double" value="0.01" />

    <!-- The scaling to be added for the body parts the robot can see -->
    <param name="self_see_scale" type="double" value="1.0" />
    
    <!-- The names of the links the sensor can see -->
    <param name="self_see_links" type="string" value="l_upper_arm_link
                  l_upper_arm_roll_link
                  l_elbow_flex_link
                  l_forearm_link
                  l_forearm_roll_link
                  l_wrist_flex_link
                  l_wrist_roll_link
                  l_gripper_l_finger_link
                  l_gripper_l_finger_tip_link
                  l_gripper_r_finger_link
                  l_gripper_r_finger_tip_link
                  l_shoulder_pan_link
                  l_shoulder_lift_link
                  r_upper_arm_link
                  r_upper_arm_roll_link
                  r_elbow_flex_link
                  r_forearm_link
                  r_forearm_roll_link
                  r_wrist_flex_link
                  r_wrist_roll_link
                  r_gripper_l_finger_link
                  r_gripper_l_finger_tip_link
                  r_gripper_r_finger_link
                  r_gripper_r_finger_tip_link
                  r_shoulder_pan_link
                  r_shoulder_lift_link
                  base_laser
                  base_link" />
    
  </node>

  <!-- Filter for base laser shadowing/veiling -->
  <node pkg="laser_scan" type="scan_to_cloud" respawn="true" machine="three" name="base_shadow_filter" >
    <rosparam command="load" ns="scan_filters" file="$(find laser_scan)/default_scan_shadows.yaml" />
    <rosparam command="load" ns="cloud_filters" file="$(find laser_scan)/point_cloud_footprint.filters.yaml" />
    <param name="scan_topic" value="base_scan" />
    <param name="cloud_topic" value="base_scan_shadow_filtered" />
  </node>

  <!-- Filter for base laser scans that hit the body of the robot -->
  <node pkg="robot_self_filter" type="self_filter" name="base_laser_self_filter" respawn="true" output="screen">

    <!-- The topic for the input cloud -->
    <remap from="cloud_in" to="base_scan_shadow_filtered" />

    <!-- The topic for the output cloud -->
    <remap from="cloud_out" to="base_scan_marking" />

    <!-- The frame of the sensor used to obtain the data to be
      filtered; This parameter is optional. If it is not specified,
      shadow points will be considered outside -->
    <param name="sensor_frame" type="string" value="base_laser" />

    <!-- Minimum distance to sensor (for point not to be considered inside) -->
    <param name="min_sensor_dist" type="double" value="0.01" />

    <!-- The padding to be added for the body parts the robot can see -->
    <param name="self_see_padd" type="double" value="0.01" />

    <!-- The scaling to be added for the body parts the robot can see -->
    <param name="self_see_scale" type="double" value="1.0" />
    
    <!-- The names of the links the sensor can see -->
    <param name="self_see_links" type="string" value="l_upper_arm_link
                  l_upper_arm_roll_link
                  l_elbow_flex_link
                  l_forearm_link
                  l_forearm_roll_link
                  l_wrist_flex_link
                  l_wrist_roll_link
                  l_gripper_l_finger_link
                  l_gripper_l_finger_tip_link
                  l_gripper_r_finger_link
                  l_gripper_r_finger_tip_link
                  l_shoulder_pan_link
                  l_shoulder_lift_link
                  r_upper_arm_link
                  r_upper_arm_roll_link
                  r_elbow_flex_link
                  r_forearm_link
                  r_forearm_roll_link
                  r_wrist_flex_link
                  r_wrist_roll_link
                  r_gripper_l_finger_link
                  r_gripper_l_finger_tip_link
                  r_gripper_r_finger_link
                  r_gripper_r_finger_tip_link
                  r_shoulder_pan_link
                  r_shoulder_lift_link" />
    
  </node>

  <!-- Laser scan assembler for tilt laser -->
  <node pkg="point_cloud_assembler" type="laser_scan_assembler_srv" name="laser_scan_assembler" respawn="true">
    <remap from="scan_in" to="tilt_scan"/>
    <rosparam command="load" ns="filters" file="$(find laser_scan)/default_scan_shadows.yaml" />
    <param name="tf_cache_time_secs" type="double" value="10.0" />
    <param name="max_scans" type="int" value="1000" />
    <param name="ignore_laser_skew" type="bool" value="true" />
    <param name="fixed_frame" type="string" value="odom_combined" />
    <param name="downsample_factor" type="int" value="1" />
  </node>

   <!-- Setup for detecting the plug on the base -->
  <node pkg="point_cloud_assembler" type="laser_scan_assembler_srv" name="plugs_laser_scan_assembler" respawn="true">
    <remap from="scan_in" to="tilt_scan"/>
    <param name="tf_cache_time_secs" type="double" value="10.0" />
    <param name="max_scans" type="int" value="400" />
    <param name="ignore_laser_skew" type="bool" value="true" />
    <param name="fixed_frame" type="string" value="torso_lift_link" />
    <param name="downsample_factor" type="int" value="2" />
  </node>

  <node pkg="point_cloud_assembler" type="point_cloud_snapshotter" name="plugs_snapshotter" respawn="true">
    <remap from="laser_scanner_signal" to="laser_tilt_controller/laser_scanner_signal"/>
    <remap from="build_cloud" to="plugs_laser_scan_assembler/build_cloud" />
    <remap from="full_cloud" to="plug_snapshot_cloud" />
  </node>

  <!-- Plug in hand tracker -->
  <group ns="plug_detector" clear_params="true">
    <param name="display" type="int" value="0"/>
    <param name="stay_active" type="bool" value="false" />

    <!-- ROI settings -->
    <param name="roi_policy" type="str" value="TargetFrame"/>
    <param name="target_frame_id" type="str" value="r_gripper_tool_frame" />
    <param name="resize_factor_found" type="double" value="3.0"/>
    <param name="resize_factor_failed" type="double" value="1.2"/>
    <param name="target_roi_size" type="int" value="800"/>

    <!-- Plug checkerboard -->
    <param name="square_size" type="double" value="0.0042"/>
    <param name="board_width" type="int" value="4"/>
    <param name="board_height" type="int" value="5"/>

  </group>
  <node pkg="outlet_detection" type="plug_node" respawn="false" machine="four"/>


  <!-- Generate single sweep scan -->
  <node pkg="point_cloud_assembler" type="point_cloud_srv" name="point_cloud_srv" />



</launch>
