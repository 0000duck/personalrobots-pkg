/**
\mainpage
\htmlinclude manifest.html

@section summary Summary

\b move_arm is an action to move the arm. Motion planning is performed and the execution of the path is being monitored. When/if the path becomes invalid, a now plan is requested.
For more details on the planning stack, see <a href="http://pr.willowgarage.com/wiki/Motion_Planning_Software_Stack">Motion Planning Software Stack</a>.

Also, see the documentation for the <a href="../../planning_environment/html">planning_environment</a> package


\section rosapi ROS API

List of nodes:
- \b move_arm : the actual robot action
- \b arm_cmd_line : a command line interface to handle arm states and send requests to move_arm
- \b oscillate_move : simple test that moves the arm between two predefined positions

<hr>

All these nodes only take standard ROS arguments

\subsection topics ROS Topics
 - same as <a href="../../planning_environment/html">planning_environment</a> 

\subsection params ROS Parameters
 - parameters that <a href="../../planning_environment/html">planning_environment</a> needs 
 - \b "~perform_ik"/bool : enable/disable performing IK for motion plans that only use a Pose Constraint for the end effector
 - \b "~arm"/string : the name of the planning group (as in <a href="../../planning_environment/html">planning_environment</a>) that contains the arm links

\subsection services ROS Services

 - \b "controller_start"/string : the name of the service to start the trajectory controller
 - \b "controller_query"/string : the name of the service to query the trajectory controller
 - \b "controller_cancel"/string : the name of the service to cancel a trajectory
 - \b "motion_plan"/string : the name of the service to plan motions
 - \b "arm_ik"/string : the name of the service to perform inverse kinematics, if one is available
 - \b "arm_ik_query"/string : the name of the service to query the inverse kinematics node, if one is available. This is used to make sure the joints IK is performed for are the same as the joints planning is done for.

\subsection running Running 

In order to run, 'move_arm' needs a robot description (together with
its planning and collision description) to be loaded. In addition to
this, the 'planning_environment' should be receiving both state and
map information constantly, so that the environment is considered
known.  A node that can perform motion planning needs to be running
and a controller for the arm need to be running as well.  Running a
node that can perform inverse kinematics is optional.  

Example launch files that start all the necessary parts exist in the
<a href="../../tabletop_scripts/html">tabletop manipulation demo</a>.

*/