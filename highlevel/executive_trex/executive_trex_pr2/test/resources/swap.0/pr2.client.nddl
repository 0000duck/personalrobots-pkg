/**
 * Execute a single external action
 */
#include "TREX.nddl"
#include "rcs/exports.nddl"
#include "rcs/resources/exports.nddl"
#include "resources/mechanism_control.nddl"


// Controllers
MechanismController head_controller = new MechanismController(Internal);
MechanismController tilt_scan_controller = new MechanismController(Internal);
MechanismController trajectory_controller = new MechanismController(Internal);
MechanismController tff_controller = new MechanismController(Internal);
MechanismController gripper_controller = new MechanismController(Internal);
MechanismController base_controller = new MechanismController(Internal);


// Mechanisms, with their default controllers
Mechanism head = new Mechanism(Internal, head_controller);
Mechanism tilt_scanner = new Mechanism(Internal, tilt_scan_controller);
Mechanism arm = new Mechanism(Internal, trajectory_controller);
Mechanism gripper = new Mechanism(Internal, gripper_controller);
Mechanism base = new Mechanism(Internal, base_controller);


// Swap Command
SwitchControllers switch_controllers = new SwitchControllers(External);

close();

// First require that the arm is controlled by tff
rejectable(arm.ControlledBy g0);
eq(g0.controller, tff_controller);

rejectable(arm.ControlledBy g1);
eq(g1.controller, trajectory_controller);
