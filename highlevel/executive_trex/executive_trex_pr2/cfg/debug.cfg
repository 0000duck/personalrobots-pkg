###########################################################################################################################
# This file defines logging configuration messages for trex. Eventually we will standard
# this logging format on the Log4cxx structure as is used by ROS. However, TREX is a 3rd party library
# so we do not want to directly couple it to ROS. The topic structure is designed to help with trouble shooting.
###########################################################################################################################
# Run with this enabled. It is not very verbose but will provide context in the event of terminal failure
:trex:error
###########################################################################################################################
# This is also not too verbose. It will generate context output when events occur that are often consistent with a
# mistake in the model. In particular when the synchronization fails we frequently did not expect that and want to
# know more about it to see if it requires investigation
:trex:warning
###########################################################################################################################
# A general debug topic will be very verbose, and overwhelm timing and data generation. However, it can be useful. Note that
# it can be selectively enabled in conjunction with running incrementally from trexconsole
#:trex:debug
###########################################################################################################################
# These topics are designed around the key areas of the TREX control loop. In general, these topics further admit sub topics
# to get targetted output that you care about, and omit others you do not.
###########################################################################################################################
# Synchronization is the process of producing
# a consistent and complete view of agent state at each time increment. It is often the area where problems are discovered
# and this topic enables detailed analysis of the internal structure to aid with diagnosis
:trex:debug:synchronization
###########################################################################################################################
# Propagation relates the the activities in the constraint network. Here we detect inconsistencies and restrict the domains
# of variables. It is common that constraint implementations may be erroneous, or that the expected inputs are not
# correct. This topic will output information on constraint execution, as well as information on the local constraint network
# in the event of inconsistencies.
#:trex:propagation
#:trex:debug:propagation
###########################################################################################################################
# The planner is used to resolve goals. The most common problem is that the planner fails to find the plan within the
# expected time frame, or the planner does not process all the parts of the planning problem you expected. The former issue
# is usually due to the problem being over constrained, under constrained, or having insufficient heuristic control. To
# investigate this, you can enable the trex topic on planning and also enable some europa topics of interest
#:trex:planning
#:trex:debug:planning
#:Solver:step
###########################################################################################################################
# It is useful to see which goals are being dispatched. This indicates the progress of the executive. If goals are not being
# dispatched it is often useful to enable this topic to find out why not
:trex:dispatching
:trex:debug:dispatching
###########################################################################################################################
# Something of a kitchen sink, this topic will output a great deal of state from the deliberative reactor. It is helpful
# when you want to see in detail the TREX operations on the PlanDatabase.
#:DbCore
#:ConstraintEngine
#:Constraint
#:PlanDatabase
###########################################################################################################################
# If the issues are in the area of ROS integration, then enable messages with a ros prefix
:ros:info
:ros:debug
###########################################################################################################################