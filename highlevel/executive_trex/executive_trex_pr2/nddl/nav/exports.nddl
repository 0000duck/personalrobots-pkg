// Constants for acceptable errors in pose
float XY_ERROR = 0.5;
float THETA_ERROR = 0.1;
float POSE_ERROR = 0.1;

/**
 * The MoveBehavior is an abstract class that handles navigation towards a goal. A mode paramter
 * will be used to indicate the type of concrete class to use.
 */

enum NavigationMode {
  Driver,
  DoorMan
};

class MoveBehavior extends Behavior {
  bool for_doorways;

  predicate Inactive{}

  // Parameters to get to the target
  predicate Active {
    float x;
    float y;
    float z;
    float qx;
    float qy;
    float qz;
    float qw;
    bool recharging;
  }

  MoveBehavior(Mode _mode, bool _for_doorways){
    super(_mode);
    for_doorways = _for_doorways;
  }

  MoveBehavior(Mode _mode, int max_duration, bool _for_doorways){
    super(_mode, max_duration);
    for_doorways = _for_doorways;
  }
};

MoveBehavior::Active{}
