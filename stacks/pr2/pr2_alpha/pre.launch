<launch>
  
  <include file="$(find pr2_alpha)/pre.machine" />
  <include file="$(find pr2_alpha)/pre_ethercat_reset.launch" />


<!-- PS3 joystick for A2 servers on PRE -->
<!-- Watts Commenting out until joystick driver works all the way, and python dev selector is tested. Launch joy with joy/ps3.launch
  <node machine="realtime" pkg="ps3joy" type="ps3_joy_node" name="joy" respawn="true" >
    <param name="deadzone" value="0.10" />
    <param name="dev" value="/dev/input/js1" />
  </node>
-->

<!-- Power Board Control Node -->
  <param name="power_board_serial" value="1021"/>
  <node machine="two" pkg="pr2_power_board" type="power_node" name="power_node" respawn="true"/>

<!-- Robot state publisher -->
 <node machine="two" pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
   <param name="publish_frequency" type="double" value="50.0" />
   <param name="tf_prefix" type="string" value="" />
 </node>

<!-- Battery Monitor -->
  <node machine="two" pkg="ocean_battery_driver" name="ocean_server" type="ocean_server"  respawn="true">
    <param name="number_of_ports" type="int" value="4" />
    <param name="port0" type="string" value="/dev/ttyUSB0" />
    <param name="port1" type="string" value="/dev/ttyUSB1" />
    <param name="port2" type="string" value="/dev/ttyUSB2" />
    <param name="port3" type="string" value="/dev/ttyUSB3" />
    <param name="debug_level" type="int" value="0" />
  </node>

  <node pkg="power_monitor" type="power_monitor"  name="power_monitor" respawn="true"/>


<!-- Base Laser -->
  <node machine="two" pkg="hokuyo_node" type="hokuyo_node" name="base_hokuyo_node" args="scan:=base_scan">
    <param name="port" type="string" value="/dev/ttyACM0" />
    <param name="frameid" type="string" value="base_laser" />
    <param name="min_ang_degrees" type="double" value="-100.0" />
    <param name="max_ang_degrees" type="double" value="100.0" />
  </node>

<!-- Tilt Laser -->
  <node  machine="realtime" pkg="hokuyo_node" type="hokuyo_node" name="tilt_hokuyo_node" args="scan:=tilt_scan">
    <param name="port" type="string" value="/dev/ttyACM0" />
    <param name="frameid" type="string" value="laser_tilt_link" />
    <param name="min_ang_degrees" type="double" value="-80.0" />
    <param name="max_ang_degrees" type="double" value="80.0" />
    <param name="skip" type="int" value="1" />
    <param name="intensity" value="true" />
  </node>

<!-- imu -->
  <param name="imu/time_offset" value="-0.040" />
  <param name="imu/port"  type="string" value="/dev/ttyUSB0" />
  <param name="imu/autostart" type="bool" value="true" />
  <param name="imu/frameid"  type="string" value="imu" />
  <param name="imu/autocalibrate" type="bool" value="true" />
  <param name="imu/angular_velocity_stdev" type="double" value="0.00017" />
  <node machine="realtime" pkg="imu_node" type="imu_node" name="imu_node" output="screen"/>

<!-- Forearm Cameras -->
  <node machine="two" name="forearm_cam_r" pkg="forearm_cam" type="forearm_node" respawn="false" output="screen">
    <param name="camera_url" type="str" value="name://forearm_r"/>
    <param name="video_mode" type="str" value="640x480x30" />
    <param name="auto_exposure" type="bool" value="True" />
    <param name="exposure" type="double" value="0" />
    <param name="auto_gain" type="bool" value="True" />
    <param name="gain" type="int" value="32" />
    <param name="frame_id" type="str" value="r_forearm_cam_optical_frame" />
    <param name="ext_trig" type="bool" value="False" />
    <param name="trig_controller" type="str" value="" />
    <param name="trig_rate" type="double" value="30" />
    <param name="trig_phase" type="int" value="0" />
  </node>
  
  <node machine="two" name="forearm_cam_l" pkg="forearm_cam" type="forearm_node" respawn="false" output="screen">
    <param name="camera_url" type="str" value="name://forearm_l"/>
    <param name="video_mode" type="str" value="640x480x30" />
    <param name="auto_exposure" type="bool" value="True" />
    <param name="exposure" type="double" value="0" />
    <param name="auto_gain" type="bool" value="True" />
    <param name="gain" type="int" value="32" />
    <param name="frame_id" type="str" value="l_forearm_cam_optical_frame" />
    <param name="ext_trig" type="bool" value="False" />
    <param name="trig_controller" type="str" value="" />
    <param name="trig_rate" type="double" value="30" />
    <param name="trig_phase" type="int" value="0" />
  </node>


<!-- Sound  
  <node pkg="sound_play" type="soundplay_node.py" name="soundplay_node" machine="three" />
-->

<!-- Runtime Diagnostics Logging -->
  <node pkg="rosrecord" type="rosrecord" name="rosrecord_diagnostics" args="-f /hwlog/pre_runtime_automatic /diagnostics" />

<!-- NTP monitoring script Warns to console if sync error -->
  <node pkg="pr2_computer_monitor" name="realtime_ntp_monitor" type="ntp_monitor.py" args="pre2" machine="realtime"/>
  <node pkg="pr2_computer_monitor" name="two_ntp_monitor" type="ntp_monitor.py" args="fw1 7000" machine="two"/> 

  <!-- Disk usage monitoring script Warns to console if disk full -->
  <node pkg="pr2_computer_monitor" name="realtime_hd_monitor" type="hd_monitor.py" args="$(optenv HOME /home)" machine="realtime"/>
  <node pkg="pr2_computer_monitor" name="two_hd_monitor" type="hd_monitor.py" args="$(optenv HOME /home)" machine="two"/> 

  <!-- Monitor CPU temp, usage -->
  <node pkg="pr2_computer_monitor" name="realtime_cpu_monitor" type="cpu_monitor.py" machine="realtime" />
  <node pkg="pr2_computer_monitor" name="two_cpu_monitor" type="cpu_monitor.py" machine="two" />

  <!-- Joint states diagnostics logging -->
  <node pkg="mechanism_control" name="joint_state_logging" type="joints_to_diagnostics.py" machine="realtime" />

  <!-- Diagnostics aggregation -->
  <node pkg="diagnostic_aggregator" type="aggregator_node"
        name="diag_agg_pre" args="PRE" output="screen" >
    <rosparam command="load" 
              file="$(find pr2_alpha)/pre_analyzers.yaml" />
  </node>


</launch>

