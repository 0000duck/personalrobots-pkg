#include "rcs/state_estimator/exports.nddl"
#include "rcs/doors/exports.nddl"
#include "rcs/plugs/exports.nddl"

/**
 * A simulation control variable governing when the doorway will be clear.
 */
class SimulationControl extends AgentTimeline {

  predicate Holds{ 
    bool doorway_clear;
  }

  SimulationControl(){ super(Internal, "Holds");}
};

// Carry prios forward by default
SimulationControl::Holds{
  met_by(Holds p);
  defaultOnCommit(doorway_clear, p.doorway_clear);
}

ReleaseHandle release_handle = new ReleaseHandle(Internal);
OpenDoor open_door = new OpenDoor(Internal);
TouchDoor touch_door = new TouchDoor(Internal);
PushDoor push_door = new PushDoor(Internal);
GraspHandle grasp_handle = new GraspHandle(Internal);
UnlatchHandle unlatch_handle = new UnlatchHandle(Internal);
DetectDoor detect_door = new DetectDoor(Internal);
DetectHandle detect_handle = new DetectHandle(Internal);
CheckPath check_path = new CheckPath(Internal);
MoveBase move_base_local = new MoveBase(Internal);
MoveBaseDoor move_base_door = new MoveBaseDoor(Internal);
StopAction stop_action = new StopAction(Internal);

SimulationControl simulation_control = new SimulationControl();



