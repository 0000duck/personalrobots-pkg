/**
 * Bring up and down mechanism controllers in temporal order. By bringup up a second
 * controller for the same mechanism, we will have to bring down the first in a swap.
 * Finally, we will require the tilt laser controller to remain active for a minimum
 * duration.
 */
#include "mechanism_control/mechanism_control.nddl"

close();

rejectable(laser_tilt_mechanism.use_laser_tilt_controller tilt_scanner_active);

rejectable(right_arm_mechanism.use_cartesian_trajectory_controller right_arm_first);

rejectable(right_arm_mechanism.use_composite_tff_controller right_arm_second);

right_arm_first before right_arm_second;
right_arm_second before tilt_scanner_active;

// Force tilt scanner inactive
tilt_scanner_active.duration = 30;
