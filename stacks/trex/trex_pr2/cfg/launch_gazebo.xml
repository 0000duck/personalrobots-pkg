<launch>
  <master auto="start"/>
  <group name="wg">
    <param name="use_sim_time" type="boolean" value="true" />
    <include file="$(find pr2_gazebo)/pr2_simple_trajectory.launch"/>

    <node pkg="map_server" type="map_server" args="$(find gazebo_worlds)/Media/materials/textures/map3.png 0.1" respawn="true" />

    <param name="robot_pose_ekf/freq" value="30.0"/>
    <param name="robot_pose_ekf/sensor_timeout" value="1.0"/>
    <param name="robot_pose_ekf/odom_used" value="true"/>
    <param name="robot_pose_ekf/imu_used" value="true"/>
    <param name="robot_pose_ekf/vo_used" value="false"/>
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" args="robot_pose_ekf" respawn="true"/>

    <param name="pf_odom_frame_id" value="odom_combined"/>
    <node pkg="fake_localization" type="fake_localization" respawn="true"/>

    <node pkg="laser_scan" type="scan_shadows_filter_node" respawn="true"/>
    <node pkg="robot_self_filter" type="robotlinks_filter_node" args="--robotfile robots/pr2full.robot.xml --padding 0.1 --accuratetiming 0" respawn="true">
      <env name="OPENRAVE_DATA" value="$(find openrave)/share/openrave:$(find openrave_robot_description)"/>
      <env name="OPENRAVE_PLUGINS" value="$(find openrave)/share/openrave/plugins"/>
    </node>

    <node pkg="laser_assembler" type="point_cloud_assembler_srv"  name="point_cloud_assembler" respawn="true">
      <remap from="scan_in" to="robotlinks_cloud_filtered" />
      <param name="tf_cache_time_secs" type="double" value="10.0" />
      <param name="max_scans" type="int" value="400" />
      <param name="fixed_frame" type="string" value="base_link" />
      <param name="downsample_factor" type="int" value="1" />
    </node>

    <node pkg="pr2_laser_snapshotter" type="pr2_laser_snapshotter" name="snapshotter">
      <remap from="laser_scanner_signal" to="laser_tilt_controller/laser_scanner_signal"/>
      <remap from="full_cloud" to="point_cloud_snapshotted" />
      <remap from="build_cloud" to="/point_cloud_assembler/build_cloud" />
    </node>
    <!--node pkg="table_object_detector" type="table_object_detector_node" name="table_object_detector" respawn="true" output="screen" /-->

    <node pkg="collision_map" type="collision_map_buffer_node" name="collision_map_buffer" respawn="true">
      <param name="end_effector_frame_l" type="string" value="r_gripper_l_finger_tip_link" />
      <param name="end_effector_frame_r" type="string" value="r_gripper_r_finger_tip_link" />
      <param name="robot_max_x" type="double" value="1.2" />
      <param name="robot_max_y" type="double" value="1.2" />
      <param name="robot_max_z" type="double" value="1.2" />
      <param name="leaf_width_x" type="double" value="0.008" />
      <param name="leaf_width_y" type="double" value="0.008" />
      <param name="leaf_width_z" type="double" value="0.008" />
      <param name="window_size" type="int" value="6" />
      <remap from="full_cloud" to="point_cloud_snapshotted" />
    </node>

    <!--<node pkg="pr2_mechanism_control" type="spawner.py" args="$(find arm_gazebo)/r_arm_trajectory_controller.xml" output="screen"/>-->

    <node pkg="kinematic_planning" type="kinematic_planning" args="robot_description" respawn="true">
      <remap from="collision_map" to="collision_map_buffer"/>
    </node>

    <include file="$(find test_highlevel_controllers)/test/launch_move_base.xml" />


    <node name="right_arm_controller" pkg="highlevel_controllers" type="move_arm2" args="right" respawn="false">
      <param name="controller_frequency" value="50.0"/>
      <param name="planner_frequency" value="5.0"/>
    </node>

    <node name="left_arm_controller" pkg="highlevel_controllers" type="move_arm2" args="left" respawn="false" >
      <param name="controller_frequency" value="50.0"/>
      <param name="planner_frequency" value="5.0"/>
    </node>

    <node pkg="highlevel_controllers" type="move_end_effector" args="right" respawn="false"/>


    <node pkg="nav_view" type="nav_view" respawn="false" />

  </group>
</launch>
