Index: server/physics/Body.hh
===================================================================
--- server/physics/Body.hh	(revision 7937)
+++ server/physics/Body.hh	(working copy)
@@ -268,6 +268,8 @@
     protected: ParamT<double> *iyzP;
     protected: bool customMassMatrix;
     protected: double cx,cy,cz,bodyMass,ixx,iyy,izz,ixy,ixz,iyz;
+
+    private: std::string lightName;
   };
 
   /// \}
Index: server/physics/Geom.cc
===================================================================
--- server/physics/Geom.cc	(revision 7937)
+++ server/physics/Geom.cc	(working copy)
@@ -249,7 +249,7 @@
 
   if (this->placeable && !this->IsStatic())
   {
-    if (dGeomGetClass(geomId) != dTriMeshClass)
+    //if (dGeomGetClass(geomId) != dTriMeshClass)
     {
       this->transId = dCreateGeomTransform( this->spaceId );
       dGeomTransformSetGeom( this->transId, this->geomId );
Index: server/physics/Body.cc
===================================================================
--- server/physics/Body.cc	(revision 7937)
+++ server/physics/Body.cc	(working copy)
@@ -242,6 +242,10 @@
     }
   }
 
+  if ((childNode = node->GetChild("light")))
+  {
+    this->lightName = OgreCreator::CreateLight(childNode, this->cgVisual);
+  }
 
   childNode = node->GetChildByNSPrefix("sensor");
 
Index: server/physics/ode/ODEPhysics.cc
===================================================================
--- server/physics/ode/ODEPhysics.cc	(revision 7937)
+++ server/physics/ode/ODEPhysics.cc	(working copy)
@@ -66,10 +66,10 @@
   this->contactGroup = dJointGroupCreate(0);
 
   // Help prevent "popping of deeply embedded object
-  dWorldSetContactMaxCorrectingVel(this->worldId, 10.0);
+  dWorldSetContactMaxCorrectingVel(this->worldId, 1.0);
 
   // This helps prevent jittering problems.
-  dWorldSetContactSurfaceLayer(this->worldId, 0.01);
+  dWorldSetContactSurfaceLayer(this->worldId, 0.001);
 
   Param::Begin(&this->parameters);
   this->globalCFMP = new ParamT<double>("cfm", 10e-5, 0);
Index: server/Model.cc
===================================================================
--- server/Model.cc	(revision 7937)
+++ server/Model.cc	(working copy)
@@ -26,6 +26,9 @@
 
 //#include <boost/python.hpp>
 
+#include <boost/thread/recursive_mutex.hpp>
+#include "Simulator.hh"
+
 #include <sstream>
 #include <iostream>
 
@@ -260,6 +263,7 @@
   //this->SetLaserRetro( **this->laserRetroP);
 
   // Create the graphics iface handler
+  boost::recursive_mutex::scoped_lock lock(*Simulator::Instance()->GetMRMutex());
   this->graphicsHandler = new GraphicsIfaceHandler();
   this->graphicsHandler->Load(this->GetScopedName(), this);
 
Index: server/World.cc
===================================================================
--- server/World.cc	(revision 7937)
+++ server/World.cc	(working copy)
@@ -229,6 +229,7 @@
 // Primarily used to update the graphics interfaces
 void World::GraphicsUpdate()
 {
+  boost::recursive_mutex::scoped_lock lock(*Simulator::Instance()->GetMRMutex());
   this->graphics->Update();
 
   // Update all the models
