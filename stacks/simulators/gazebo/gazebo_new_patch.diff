Index: cmake/SearchForStuff.cmake
===================================================================
--- cmake/SearchForStuff.cmake	(revision 8208)
+++ cmake/SearchForStuff.cmake	(working copy)
@@ -136,7 +136,7 @@
     SET (HAVE_FFMPEG TRUE)
   ENDIF (AVF_FOUND AND AVC_FOUND)
 
-  pkg_check_modules(PLAYER playercore>=3.0)
+  pkg_check_modules(PLAYER playercore>=2.2)
   IF (NOT PLAYER_FOUND)
     SET (INCLUDE_PLAYER OFF CACHE BOOL "Build gazebo plugin for player" FORCE)
     MESSAGE (STATUS "Warning: Player not found. The gazebo plugin for player will not be built. See the following website: http://playerstage.sourceforge.net")
Index: libgazebo/Iface.cc
===================================================================
--- libgazebo/Iface.cc	(revision 8208)
+++ libgazebo/Iface.cc	(working copy)
@@ -288,6 +288,12 @@
   // Map the mmap file
   this->mMap = mmap(0, this->size, PROT_READ | PROT_WRITE, MAP_SHARED, this->mmapFd, 0);
 
+  // flushes changes made to the in-core copy of a mmap file
+  if (msync( this->mMap, this->size, MS_SYNC))
+  {
+    stream << "error msync mmap: " << strerror(errno);
+    throw(stream.str());
+  }
 
   if (this->mMap == MAP_FAILED)
   {
Index: server/Simulator.cc
===================================================================
--- server/Simulator.cc	(revision 8208)
+++ server/Simulator.cc	(working copy)
@@ -676,7 +676,7 @@
     nanosleep(&req, &rem);
 
     // Process all incoming messages from simiface
-    world->ProcessMessages();
+    world->UpdateSimulationIface();
 
     if (this->timeout > 0 && this->GetRealTime() > this->timeout)
     {
Index: server/World.hh
===================================================================
--- server/World.hh	(revision 8208)
+++ server/World.hh	(working copy)
@@ -176,8 +176,6 @@
   /// \brief Get whether to view as wireframe
   public: bool GetShowPhysics();
 
-  public: void ProcessMessages();
-
   /// Set to true to show bounding boxes
   private: bool showBoundingBoxes;
 
@@ -202,7 +200,7 @@
   private: void SetModelPose(Model *model , Pose3d pose);
 
   /// \brief Update the simulation iface
-  private: void UpdateSimulationIface();
+  public: void UpdateSimulationIface();
 
   /// \brif Get the names of interfaces defined in the tree of a model
   private: void GetInterfaceNames(Entity* m, std::vector<std::string>& list);
@@ -216,9 +214,6 @@
   /// List of all the registered geometries
   private: std::vector< Geom* > geometries;
 
-  /// List of models to add into the world
-  private: std::vector< Model* > toAddModels;
-
   /// List of models to delete from the world
   private: std::vector< Model* > toDeleteModels;
 
Index: server/World.cc
===================================================================
--- server/World.cc	(revision 8208)
+++ server/World.cc	(working copy)
@@ -218,7 +218,6 @@
   if (this->openAL)
     this->openAL->Init();
 
-  this->toAddModels.clear();
   this->toDeleteModels.clear();
   this->toLoadEntities.clear();
 
@@ -304,13 +303,6 @@
 }
 
 ////////////////////////////////////////////////////////////////////////////////
-// Process messages
-void World::ProcessMessages()
-{
-  this->UpdateSimulationIface();
-}
-
-////////////////////////////////////////////////////////////////////////////////
 // Finilize the world
 void World::Fini()
 {
@@ -477,13 +469,10 @@
   this->SetModelPose(model, model->GetInitPose());
 
   // Add the model to our list
-  if (Simulator::Instance()->GetSimTime() == 0)
-    this->models.push_back(model);
-  else
-  {
+  this->models.push_back(model);
+
+  if (Simulator::Instance()->GetSimTime() > 0)
     model->Init();
-    this->toAddModels.push_back(model);
-  }
 
   if (parent != NULL)
     model->Attach(node->GetChild("attach"));
@@ -1257,16 +1246,8 @@
 
   this->simIface->Unlock();
 
-
-  std::vector< Model* >::iterator miter;
-
-  // Copy the newly created models into the main model vector
-  std::copy(this->toAddModels.begin(), this->toAddModels.end(),
-      std::back_inserter(this->models));
-  this->toAddModels.clear();
-
-
   // Remove and delete all models that are marked for deletion
+  std::vector< Model* >::iterator miter;
   for (miter=this->toDeleteModels.begin();
       miter!=this->toDeleteModels.end(); miter++)
   {
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 8208)
+++ CMakeLists.txt	(working copy)
@@ -34,7 +34,7 @@
 SET (OGRE_VERSION 1.6.1 CACHE INTERNAL "Ogre version requirement" FORCE)
 
 SET (FREEIMAGE_MAJOR_VERSION 3 CACHE INTERNAL "FreeImage major version requirement" FORCE)
-SET (FREEIMAGE_MINOR_VERSION 10 CACHE INTERNAL "FreeImage minor version requirement" FORCE)
+SET (FREEIMAGE_MINOR_VERSION 9 CACHE INTERNAL "FreeImage minor version requirement" FORCE)
 SET (FREEIMAGE_VERSION ${FREEIMAGE_MAJOR_VERSION}.${FREEIMAGE_MINOR_VERSION}.0 CACHE INTERNAL "FreeImage version requirement" FORCE)
 SET (ODE_VERSION 0.10.1 CACHE INTERNAL "ODE version requirement" FORCE)
 SET (MIN_BOOST_VERSION 1.35.0 CACHE INTERNAL "Boost min version requirement" FORCE)
