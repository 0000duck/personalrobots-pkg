Index: server/physics/Geom.cc
===================================================================
--- server/physics/Geom.cc	(revision 7945)
+++ server/physics/Geom.cc	(working copy)
@@ -249,12 +249,12 @@
 
   if (this->placeable && !this->IsStatic())
   {
-    if (dGeomGetClass(geomId) != dTriMeshClass)
+    //if (dGeomGetClass(geomId) != dTriMeshClass)
     {
       this->transId = dCreateGeomTransform( this->spaceId );
       dGeomTransformSetGeom( this->transId, this->geomId );
       dGeomTransformSetInfo( this->transId, 1 );
-      assert(dGeomGetSpace(this->geomId) == 0);
+      //assert(dGeomGetSpace(this->geomId) == 0);
     }
   }
   else if ( dGeomGetSpace(this->geomId) == 0 )
Index: server/physics/ode/ODEPhysics.cc
===================================================================
--- server/physics/ode/ODEPhysics.cc	(revision 7945)
+++ server/physics/ode/ODEPhysics.cc	(working copy)
@@ -66,10 +66,10 @@
   this->contactGroup = dJointGroupCreate(0);
 
   // Help prevent "popping of deeply embedded object
-  dWorldSetContactMaxCorrectingVel(this->worldId, 10.0);
+  dWorldSetContactMaxCorrectingVel(this->worldId, 100.0);
 
   // This helps prevent jittering problems.
-  dWorldSetContactSurfaceLayer(this->worldId, 0.01);
+  dWorldSetContactSurfaceLayer(this->worldId, 0.001);
 
   Param::Begin(&this->parameters);
   this->globalCFMP = new ParamT<double>("cfm", 10e-5, 0);
Index: server/Model.cc
===================================================================
--- server/Model.cc	(revision 7945)
+++ server/Model.cc	(working copy)
@@ -260,7 +260,8 @@
   this->SetCollideMode( **this->collideP );
 
   this->SetLaserFiducialId( **this->laserFiducialP);
-  this->SetLaserRetro( **this->laserRetroP);
+  // do not set laser retro, this is done via callback!
+  //this->SetLaserRetro( **this->laserRetroP);
 
   // Create the graphics iface handler
   this->graphicsHandler = new GraphicsIfaceHandler();
